name: Docker build and push
 
on:
  push:
    branches:
    - main 
  pull_request:
    branches:
      - main
  schedule:
    - cron:  '0 0 * * 2'

jobs:
  docker_build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        versions: [
          { java: '8', node: '12', ubuntu: 'xenial', arch: 'linux/amd64' },
          { java: '8', node: '12', ubuntu: 'bionic', arch: 'linux/amd64' },
          { java: '8', node: '12', ubuntu: 'focal' , arch: 'linux/amd64'},
          # { java: '11', node: '12', ubuntu: 'xenial', arch: 'linux/amd64,linux/arm64' },
          # { java: '11', node: '12', ubuntu: 'bionic', arch: 'linux/amd64,linux/arm64' },
          # { java: '11', node: '12', ubuntu: 'focal', arch: 'linux/amd64,linux/arm64' },
          { java: '11', node: '12', ubuntu: 'xenial', arch: 'linux/amd64' },
          { java: '11', node: '12', ubuntu: 'bionic', arch: 'linux/amd64' },
          { java: '11', node: '12', ubuntu: 'focal', arch: 'linux/amd64' },
          { java: '16', node: '12', ubuntu: 'xenial', arch: 'linux/amd64' },
          { java: '16', node: '12', ubuntu: 'bionic', arch: 'linux/amd64' },
          { java: '16', node: '12', ubuntu: 'focal', arch: 'linux/amd64' },
          { java: '8', node: '14', ubuntu: 'xenial', arch: 'linux/amd64' },
          { java: '8', node: '14', ubuntu: 'bionic', arch: 'linux/amd64' },
          { java: '8', node: '14', ubuntu: 'focal', arch: 'linux/amd64' },
          # { java: '11', node: '14', ubuntu: 'xenial', arch: 'linux/amd64,linux/arm64' },
          # { java: '11', node: '14', ubuntu: 'bionic', arch: 'linux/amd64,linux/arm64' },
          # { java: '11', node: '14', ubuntu: 'focal', arch: 'linux/amd64,linux/arm64' },
          { java: '11', node: '14', ubuntu: 'xenial', arch: 'linux/amd64' },
          { java: '11', node: '14', ubuntu: 'bionic', arch: 'linux/amd64' },
          { java: '11', node: '14', ubuntu: 'focal', arch: 'linux/amd64' },
          { java: '16', node: '14', ubuntu: 'xenial', arch: 'linux/amd64' },
          { java: '16', node: '14', ubuntu: 'bionic', arch: 'linux/amd64' },
          { java: '16', node: '14', ubuntu: 'focal', arch: 'linux/amd64' }
        ]
    steps:
    - uses: actions/checkout@master
      if: github.event_name == 'pull_request' && github.event_name != 'schedule'
    - name: Set up QEMU
      if: github.event_name == 'pull_request' && github.event_name != 'schedule'
      uses: docker/setup-qemu-action@v1
    - uses: docker/setup-buildx-action@v1
      if: github.event_name == 'pull_request' && github.event_name != 'schedule'
      id: buildx
      with:
        install: true
    - name: "Build java: ${{ matrix.versions.java }}  Node.js: ${{ matrix.versions.node }}  Ubuntu: ${{ matrix.versions.ubuntu }}"
      env:
        ARCH: ${{ matrix.versions.arch }}
      if: github.event_name == 'pull_request' && github.event_name != 'schedule'
      run: |
        IMAGRE_NAME=poad/aws-cdk-docker:node${{ matrix.versions.node }}-jdk${{ matrix.versions.java }}-${{ matrix.versions.ubuntu }} && \
        docker buildx build --platform "${ARCH}" --build-arg JAVA_VERSION=${{ matrix.versions.java }} --build-arg NODE_VERSION=${{ matrix.versions.node }} --build-arg UBUNTU_VERSION=${{ matrix.versions.ubuntu }} -t ${IMAGRE_NAME} .
    - name: Hadolint
      if: github.event_name == 'pull_request' && github.event_name != 'schedule'
      uses: brpaz/hadolint-action@master

  docker_push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        versions: [
          { java: '8', node: '12', ubuntu: 'xenial', arch: 'linux/amd64' },
          { java: '8', node: '12', ubuntu: 'bionic', arch: 'linux/amd64' },
          { java: '8', node: '12', ubuntu: 'focal' , arch: 'linux/amd64'},
          # { java: '11', node: '12', ubuntu: 'xenial', arch: 'linux/amd64,linux/arm64' },
          # { java: '11', node: '12', ubuntu: 'bionic', arch: 'linux/amd64,linux/arm64' },
          # { java: '11', node: '12', ubuntu: 'focal', arch: 'linux/amd64,linux/arm64' },
          { java: '11', node: '12', ubuntu: 'xenial', arch: 'linux/amd64' },
          { java: '11', node: '12', ubuntu: 'bionic', arch: 'linux/amd64' },
          { java: '11', node: '12', ubuntu: 'focal', arch: 'linux/amd64' },
          { java: '16', node: '12', ubuntu: 'xenial', arch: 'linux/amd64' },
          { java: '16', node: '12', ubuntu: 'bionic', arch: 'linux/amd64' },
          { java: '16', node: '12', ubuntu: 'focal', arch: 'linux/amd64' },
          { java: '8', node: '14', ubuntu: 'xenial', arch: 'linux/amd64' },
          { java: '8', node: '14', ubuntu: 'bionic', arch: 'linux/amd64' },
          { java: '8', node: '14', ubuntu: 'focal', arch: 'linux/amd64' },
          # { java: '11', node: '14', ubuntu: 'xenial', arch: 'linux/amd64,linux/arm64' },
          # { java: '11', node: '14', ubuntu: 'bionic', arch: 'linux/amd64,linux/arm64' },
          # { java: '11', node: '14', ubuntu: 'focal', arch: 'linux/amd64,linux/arm64' },
          { java: '11', node: '14', ubuntu: 'xenial', arch: 'linux/amd64' },
          { java: '11', node: '14', ubuntu: 'bionic', arch: 'linux/amd64' },
          { java: '11', node: '14', ubuntu: 'focal', arch: 'linux/amd64' },
          { java: '16', node: '14', ubuntu: 'xenial', arch: 'linux/amd64' },
          { java: '16', node: '14', ubuntu: 'bionic', arch: 'linux/amd64' },
          { java: '16', node: '14', ubuntu: 'focal', arch: 'linux/amd64' }
        ]
    steps:
    - uses: actions/checkout@master
      if: github.event_name != 'pull_request'
    - name: Set up QEMU
      if: github.event_name != 'pull_request'
      uses: docker/setup-qemu-action@v1
    - uses: docker/setup-buildx-action@v1
      if: github.event_name != 'pull_request'
      id: buildx
      with:
        install: true
    - name: Build ${{ matrix.dir_tag.tag }} and push
      env:
        ARCH: ${{ matrix.versions.arch }}
      if: github.event_name != 'pull_request'
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u poad --password-stdin && \
        IMAGRE_NAME=poad/aws-cdk-docker:node${{ matrix.versions.node }}-jdk${{ matrix.versions.java }}-${{ matrix.versions.ubuntu }} && \
        docker buildx build --platform "${ARCH}" --build-arg JAVA_VERSION=${{ matrix.versions.java }} --build-arg NODE_VERSION=${{ matrix.versions.node }} --build-arg UBUNTU_VERSION=${{ matrix.versions.ubuntu }} -t ${IMAGRE_NAME} . && \
        docker push ${IMAGRE_NAME}
